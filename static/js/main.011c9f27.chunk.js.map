{"version":3,"sources":["assets/audio/start.mp3","assets/audio/end.mp3","components/Pomodoro/Pomodoro.jsx","App.jsx","reportWebVitals.js","index.jsx","components/Pomodoro/Pomodoro.module.css","App.module.css"],"names":["Pomodoro","useState","minView","setMinView","secView","setSecView","workMin","setWorkMin","breakMin","setBreakMin","lap","setLap","status","setStatus","isPaused","setPause","isReset","setReset","wrapRef","useRef","minViewRef","secViewRef","isPausedRef","statusRef","lapRef","useSound","startSound","playStart","endSound","palyEnd","useEffect","switchWrap","interval","setInterval","current","clearInterval","switchStatus","className","styles","wrap","wrap_session","wrap_break","ref","work_time","main_status","main_time","time","time_container","time_button","onMouseDown","time_item","disabled","control_button","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2MAAe,MAA0B,kCCA1B,MAA0B,gC,uBCMlC,SAASA,IACZ,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAsBR,mBAAS,GAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAA4BV,mBAAS,WAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA6BZ,oBAAS,GAAtC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAA4Bd,oBAAS,GAArC,mBAAOe,EAAP,KAAgBC,EAAhB,KAEMC,EAAUC,iBAAO,MACjBC,EAAaD,iBAAOjB,GACpBmB,EAAaF,iBAAOf,GACpBkB,EAAcH,iBAAOL,GACrBS,EAAYJ,iBAAOP,GACnBY,EAASL,iBAAOT,GAEtB,EAAoBe,YAASC,GAAtBC,EAAP,oBACA,EAAkBF,YAASG,GAApBC,EAAP,oBAEAC,qBAAU,WACNC,IACA,IAAMC,EAAWC,aAAY,WACzB,OAAIX,EAAYY,QACLC,cAAcH,GAGE,IAAvBX,EAAWa,SAAwC,IAAvBd,EAAWc,QAChCE,IAGgB,IAAvBf,EAAWa,SACXd,EAAWc,UACX/B,EAAWiB,EAAWc,SACtBb,EAAWa,QAAU,GACf7B,EAAWgB,EAAWa,WAG5BX,EAAUW,QAIdb,EAAWa,eACX7B,EAAWgB,EAAWa,YACvB,OACJ,CAACpB,IAEJ,IAAMsB,EAAe,WACjB,MAA0B,YAAtBb,EAAUW,SACVX,EAAUW,QAAU,QACpBrB,EAAUU,EAAUW,SACpBd,EAAWc,QAAU1B,EACrBqB,IACO1B,EAAWiB,EAAWc,UAGP,UAAtBX,EAAUW,SACVX,EAAUW,QAAU,UACpBrB,EAAUU,EAAUW,SACpBV,EAAOU,UACPvB,EAAOa,EAAOU,SACdd,EAAWc,QAAU5B,EACrBqB,IACOxB,EAAWiB,EAAWc,eAPjC,GAgEEH,EAAa,WACXT,EAAYY,UACZhB,EAAQgB,QAAQG,UAAYC,IAAOC,MAGlCjB,EAAYY,SAAiC,YAAtBX,EAAUW,UAClChB,EAAQgB,QAAQG,UAAYC,IAAOE,cAGlClB,EAAYY,SAAiC,UAAtBX,EAAUW,UAClChB,EAAQgB,QAAQG,UAAYC,IAAOG,aAI3C,OACI,sBAAKJ,UAAWC,IAAOC,KAAMG,IAAKxB,EAAlC,UACI,sBAAKmB,UAAWC,IAAOK,UAAvB,UACI,oBAAGN,UAAWC,IAAOM,YAArB,UAAmC9B,EAAW,QAAUF,EAAxD,SAAsEF,KACtE,mBAAG2B,UAAWC,IAAOO,UAArB,SArEJ3C,EAAU,IAAME,EAAU,GACpB,IAAN,OAAWF,EAAX,aAAuBE,GAChBF,GAAW,IAAME,EAAU,GAC5B,GAAN,OAAUF,EAAV,aAAsBE,GACfF,EAAU,IAAME,GAAW,GAC5B,IAAN,OAAWF,EAAX,YAAsBE,GAEhB,GAAN,OAAUF,EAAV,YAAqBE,QAiEnBY,EACF,sBAAKqB,UAAWC,IAAOQ,KAAvB,UACI,sBAAKT,UAAWC,IAAOS,eAAvB,UACI,wBAAQV,UAAWC,IAAOU,YAAaC,YApC/B,WACpB1C,EAAWD,EAAU,GACrBc,EAAWc,UACX/B,EAAWiB,EAAWc,UAiCV,eACA,sBAAKG,UAAWC,IAAOY,UAAvB,UACI,wCACA,8BAAI5C,EAAU,GAAK,EAAI,KAAMA,EAA7B,aAEJ,wBAAQ+B,UAAWC,IAAOU,YAAaG,SAAsB,IAAZ7C,EAAe2C,YAnCvD,WACrB1C,EAAWD,EAAU,GACrBc,EAAWc,UACX/B,EAAWiB,EAAWc,UAgCV,kBAEJ,sBAAKG,UAAWC,IAAOS,eAAvB,UACI,wBAAQV,UAAWC,IAAOU,YAAaC,YAAa,kBAAMxC,EAAYD,EAAW,IAAjF,eACA,sBAAK6B,UAAWC,IAAOY,UAAvB,UACI,sCACA,8BAAI1C,EAAW,GAAK,EAAI,KAAMA,EAA9B,aAEJ,wBAAQ6B,UAAWC,IAAOU,YAAaG,SAAuB,IAAb3C,EAAgByC,YAAa,kBAAMxC,EAAYD,EAAW,IAA3G,qBAhBK,KAqBb,gCACI,wBAAQ6B,UAAWC,IAAOc,eAAgBD,SAAsB,IAAZ7C,GAA8B,IAAbE,IAAmBM,EAAWuC,QAlF1F,WACjB/B,EAAYY,SAAU,EACtBnB,EAASO,EAAYY,SACrBjB,GAAS,GAEkB,IAAvBI,EAAWa,SAAiBd,EAAWc,UAAY5B,GACnDqB,KA4EI,mBACA,wBAAQU,UAAWC,IAAOc,eAAgBD,SAAUrC,EAAUuC,QAzErD,WACjB/B,EAAYY,SAAU,EACtBnB,EAASO,EAAYY,UAuEb,mBACA,wBAAQG,UAAWC,IAAOc,eAAgBD,UAAWrC,EAAUuC,QArEtD,WACjBjC,EAAWc,QAAU5B,EACrBe,EAAWa,QAAU,EACrBV,EAAOU,QAAU,EACjBX,EAAUW,QAAU,UACpBrB,EAAUU,EAAUW,SACpB/B,EAAWiB,EAAWc,SACtB7B,EAAWgB,EAAWa,SACtBvB,EAAOa,EAAOU,SACdjB,GAAS,IA4DD,yBC/JDqC,MARf,WACE,OACE,qBAAKjB,UAAWC,IAAOgB,IAAvB,SACE,cAACtD,EAAD,OCKSuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,uBAAuB,aAAe,+BAA+B,WAAa,6BAA6B,UAAY,4BAA4B,UAAY,4BAA4B,YAAc,8BAA8B,KAAO,uBAAuB,eAAiB,iCAAiC,YAAc,8BAA8B,UAAY,4BAA4B,eAAiB,mC,kBCAzbD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,qB","file":"static/js/main.011c9f27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/start.787cab6b.mp3\";","export default __webpack_public_path__ + \"static/media/end.a3dcc2db.mp3\";","import { useEffect, useRef, useState } from \"react\";\r\nimport useSound from \"use-sound\";\r\nimport startSound from \"../../assets/audio/start.mp3\"\r\nimport endSound from \"../../assets/audio/end.mp3\"\r\nimport styles from \"./Pomodoro.module.css\"\r\n\r\nexport function Pomodoro() {\r\n    const [minView, setMinView] = useState(0);\r\n    const [secView, setSecView] = useState(0);\r\n    const [workMin, setWorkMin] = useState(0);\r\n    const [breakMin, setBreakMin] = useState(0);\r\n    const [lap, setLap] = useState(0);\r\n    const [status, setStatus] = useState(\"Session\" || \"Break\" || \"Pause\")\r\n    const [isPaused, setPause] = useState(true)\r\n    const [isReset, setReset] = useState(true)\r\n\r\n    const wrapRef = useRef(null)\r\n    const minViewRef = useRef(minView)\r\n    const secViewRef = useRef(secView)\r\n    const isPausedRef = useRef(isPaused)\r\n    const statusRef = useRef(status)\r\n    const lapRef = useRef(lap)\r\n\r\n    const [playStart] = useSound(startSound)\r\n    const [palyEnd] = useSound(endSound)\r\n\r\n    useEffect(() => {\r\n        switchWrap()\r\n        const interval = setInterval(() => {\r\n            if (isPausedRef.current) {\r\n                return clearInterval(interval)\r\n            }\r\n    \r\n            if (secViewRef.current === 0 && minViewRef.current === 0) {\r\n                return switchStatus()\r\n            }\r\n    \r\n            if (secViewRef.current === 0) {\r\n                minViewRef.current--\r\n                setMinView(minViewRef.current)\r\n                secViewRef.current = 59\r\n               return setSecView(secViewRef.current)\r\n            }\r\n\r\n            if (statusRef.current === 'Session' && minViewRef === 0 && secViewRef === 10) {\r\n                \r\n            }\r\n\r\n            secViewRef.current--\r\n            setSecView(secViewRef.current)\r\n        }, 1000)\r\n    }, [isPaused])\r\n\r\n    const switchStatus = () => {\r\n        if (statusRef.current === 'Session') {\r\n            statusRef.current = 'Break'\r\n            setStatus(statusRef.current)\r\n            minViewRef.current = breakMin\r\n            palyEnd()\r\n            return setMinView(minViewRef.current)\r\n        }\r\n\r\n        if (statusRef.current === 'Break') {\r\n            statusRef.current = 'Session'\r\n            setStatus(statusRef.current)\r\n            lapRef.current++ \r\n            setLap(lapRef.current)\r\n            minViewRef.current = workMin\r\n            playStart()\r\n            return setMinView(minViewRef.current)\r\n        }\r\n\r\n    }\r\n\r\n    const showTimmer = () => {\r\n        if (minView < 10 && secView < 10) {\r\n            return `0${minView}:0${secView}`\r\n        } else if (minView >= 10 && secView < 10) {\r\n            return `${minView}:0${secView}`\r\n        } else if (minView < 10 && secView >= 10) {\r\n            return `0${minView}:${secView}`\r\n        } else {\r\n            return `${minView}:${secView}`\r\n        }\r\n    }\r\n\r\n\r\n    const onClickStart = () => {\r\n        isPausedRef.current = false\r\n        setPause(isPausedRef.current)\r\n        setReset(false)\r\n\r\n        if (secViewRef.current === 0 && minViewRef.current === workMin) {\r\n            playStart()\r\n        }\r\n    }\r\n\r\n    const onClickPause = () => {\r\n        isPausedRef.current = true\r\n        setPause(isPausedRef.current)\r\n    }\r\n\r\n    const onClickReset = () => {\r\n        minViewRef.current = workMin\r\n        secViewRef.current = 0\r\n        lapRef.current = 0\r\n        statusRef.current = 'Session'\r\n        setStatus(statusRef.current)\r\n        setMinView(minViewRef.current)\r\n        setSecView(secViewRef.current)\r\n        setLap(lapRef.current)\r\n        setReset(true)\r\n    }\r\n\r\n    const onClickPlusWork = () => {\r\n        setWorkMin(workMin + 1)\r\n        minViewRef.current++\r\n        setMinView(minViewRef.current)\r\n    }\r\n\r\n    const onClickMinusWork = () => {\r\n        setWorkMin(workMin - 1)\r\n        minViewRef.current--\r\n        setMinView(minViewRef.current)\r\n    }\r\n\r\n    const switchWrap = () => {\r\n        if (isPausedRef.current) {\r\n            wrapRef.current.className = styles.wrap\r\n        }\r\n\r\n        if (!isPausedRef.current && statusRef.current === \"Session\") {\r\n            wrapRef.current.className = styles.wrap_session\r\n        }\r\n\r\n        if (!isPausedRef.current && statusRef.current === \"Break\") {\r\n            wrapRef.current.className = styles.wrap_break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrap} ref={wrapRef}>\r\n            <div className={styles.work_time}>\r\n                <p className={styles.main_status}>{isPaused ? \"Pause\" : status} Lap: {lap}</p>\r\n                <p className={styles.main_time}>{showTimmer()}</p>\r\n            </div>\r\n\r\n           {(!isReset) ? null : \r\n            <div className={styles.time}>\r\n                <div className={styles.time_container}>\r\n                    <button className={styles.time_button} onMouseDown={onClickPlusWork}>+</button>\r\n                    <div className={styles.time_item}>\r\n                        <p>Session</p>\r\n                        <p>{workMin < 10 ? 0 : null}{workMin} min</p>\r\n                    </div>\r\n                    <button className={styles.time_button} disabled={workMin === 0} onMouseDown={onClickMinusWork}>-</button>\r\n                </div>\r\n                <div className={styles.time_container}>\r\n                    <button className={styles.time_button} onMouseDown={() => setBreakMin(breakMin + 1)}>+</button>\r\n                    <div className={styles.time_item}>\r\n                        <p>Break</p>\r\n                        <p>{breakMin < 10 ? 0 : null}{breakMin} min</p>\r\n                    </div>\r\n                    <button className={styles.time_button} disabled={breakMin === 0} onMouseDown={() => setBreakMin(breakMin - 1)}>-</button>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <button className={styles.control_button} disabled={workMin === 0 || breakMin === 0 || !isPaused } onClick={onClickStart}>Start</button>\r\n                <button className={styles.control_button} disabled={isPaused} onClick={onClickPause}>Pause</button>\r\n                <button className={styles.control_button} disabled={!isPaused} onClick={onClickReset}>Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import styles from \"./App.module.css\";\nimport React from 'react';\nimport { Pomodoro } from \"./components/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <Pomodoro></Pomodoro>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Pomodoro_wrap__1WoXP\",\"wrap_session\":\"Pomodoro_wrap_session__1z_zR\",\"wrap_break\":\"Pomodoro_wrap_break__w9bHj\",\"work_time\":\"Pomodoro_work_time__Vt27V\",\"main_time\":\"Pomodoro_main_time__2aHjM\",\"main_status\":\"Pomodoro_main_status__IhUqU\",\"time\":\"Pomodoro_time__rKDyV\",\"time_container\":\"Pomodoro_time_container__3xhYD\",\"time_button\":\"Pomodoro_time_button__3pgNu\",\"time_item\":\"Pomodoro_time_item__M-B7q\",\"control_button\":\"Pomodoro_control_button__stPF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__DGnpw\",\"wrap\":\"App_wrap__13TPC\"};"],"sourceRoot":""}